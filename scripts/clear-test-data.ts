import { drizzle } from "drizzle-orm/neon-http";
import { neon } from "@neondatabase/serverless";
import * as schema from "../src/db/schema";
import "dotenv/config";

const sql = neon(process.env.DATABASE_URL!);
const db = drizzle(sql, { schema });

async function clearTestData() {
  try {
    console.log("üßπ –ù–∞—á–∏–Ω–∞—é –æ—á–∏—Å—Ç–∫—É —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...");

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–ª–æ–¥—ã —Å –∏–º–µ–Ω–µ–º "Test Deck" –∏–ª–∏ –ø–æ—Ö–æ–∂–∏–º–∏
    const testDecks = await db
      .delete(schema.decksTable)
      .where(
        sql`${schema.decksTable.name} ILIKE '%test%' OR ${schema.decksTable.name} ILIKE '%Test%'`
      )
      .returning();

    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${testDecks.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–ª–æ–¥`);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–ª–æ–¥—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º userId
    const tempDecks = await db
      .delete(schema.decksTable)
      .where(sql`${schema.decksTable.userId} = 'temp-user'`)
      .returning();

    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${tempDecks.length} –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–¥`);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–ª–æ–¥—ã —Å —Ç–µ—Å—Ç–æ–≤—ã–º userId –∏–∑ seed —Å–∫—Ä–∏–ø—Ç–∞
    const seedDecks = await db
      .delete(schema.decksTable)
      .where(sql`${schema.decksTable.userId} = 'user_317c3rTqJ1vaBpbHTWr2IrCJLTf'`)
      .returning();

    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${seedDecks.length} seed –∫–æ–ª–æ–¥`);

    console.log("üéâ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error);
    process.exit(1);
  }
}

clearTestData();
